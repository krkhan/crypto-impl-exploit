package impl_beast

import (
	"crypto/aes"
	"testing"

	"github.com/krkhan/crypto-impl-exploit/ch05/padding_oracle/impl_padding_oracle"
)

func TestEncryptedHTTPSession(t *testing.T) {
	session, firstRequestCiphertext, err := NewEncryptedHTTPSession("bank.com", "/index.html")
	if err != nil {
		t.Fatalf("error creating http session: %s", err)
	}
	t.Logf("firstRequestCiphertext: %d bytes", len(firstRequestCiphertext))
	secondRequest := "GET /garbage HTTP/4.2"
	secondRequestPadded, err := impl_padding_oracle.PadWithPKCS7([]byte(secondRequest), aes.BlockSize)
	if err != nil {
		t.Fatalf("error padding second request: %s", err)
	}
	secondRequestCiphertext, err := session.EncryptRequest(secondRequestPadded)
	if err != nil {
		t.Fatalf("error encrypting second request")
	}
	t.Logf("secondRequestCiphertext: %d bytes", len(secondRequestCiphertext))
}
