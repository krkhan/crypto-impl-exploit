package exploit_rc4

import (
	"testing"

	"github.com/krkhan/crypto-impl-exploit/ch04/rc4/impl_rc4"
)

func TestRecoverWEPPSK(t *testing.T) {
	t.Logf("message volume: %d", WEPMessageVolume)

	originalKey := []byte("helloworld123")
	wpg := impl_rc4.NewWEPPacketGenerator(originalKey)
	recoveredKey := []byte{}

	for i := 0; i < len(originalKey); i++ {
		recoveredKeyByte := RecoverWEPPSK(wpg, recoveredKey)
		recoveredKey = append(recoveredKey, recoveredKeyByte)
	}
	t.Logf("recovered key: %q", recoveredKey)

	for i := 0; i < len(originalKey); i++ {
		if recoveredKey[i] != originalKey[i] {
			t.Fatalf("key mismatch, recovered: %v, original: %v\n", recoveredKey, originalKey)
		}
	}

	originalKey = []byte("1supersecret1")
	wpg = impl_rc4.NewWEPPacketGenerator(originalKey)
	recoveredKey = []byte{}

	for i := 0; i < len(originalKey); i++ {
		recoveredKeyByte := RecoverWEPPSK(wpg, recoveredKey)
		recoveredKey = append(recoveredKey, recoveredKeyByte)
	}
	t.Logf("recovered key: %q", recoveredKey)

	for i := 0; i < len(originalKey); i++ {
		if recoveredKey[i] != originalKey[i] {
			t.Fatalf("key mismatch, recovered: %v, original: %v\n", recoveredKey, originalKey)
		}
	}
}
