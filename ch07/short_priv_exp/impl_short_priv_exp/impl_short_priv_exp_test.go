package impl_short_priv_exp

import (
	"math/big"
	"testing"
	"time"
)

func TestTextbookRSA(t *testing.T) {
	privKey, err := GenerateVulnerableRSAPrivateKey()
	if err != nil {
		t.Fatalf("error generating private key: %s", err)
	}

	plaintextBytes := time.Now().String()
	plaintext := new(big.Int).SetBytes([]byte(plaintextBytes))
	ciphertext := privKey.PublicKey.Encrypt(plaintext)
	decrypted := privKey.Decrypt(ciphertext)

	if decrypted.Cmp(plaintext) != 0 {
		t.Fatalf("decryption failed, original: %X, decrypted: %X", plaintext, decrypted)
	}

	t.Logf("decrypted: %s", decrypted.Bytes())
}
