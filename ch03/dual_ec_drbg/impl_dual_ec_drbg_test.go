package dual_ec_drbg

import (
	"bytes"
	"encoding/hex"
	"math/big"
	"testing"
)

func TestDualEcDrbgWithHardcodedSeed(t *testing.T) {
	p, _ := NewPoint(Px, Py)
	q, _ := NewPoint(Qx, Qy)
	drbg, err := NewDualEcDrbg(p, q)
	if err != nil {
		t.Fatalf("error creating drbg: %s", err)
	}
	seed := new(big.Int)
	seed, _ = seed.SetString("37988b358d7493bf8d9a77fd6709ed5b7fd2eb56", 16)
	drbg.Seed(seed)
	_ = drbg.Generate()
	expected, _ := hex.DecodeString("a69e552c669f79f25aeb3cef074f6512273d25c71702832b39d06e57a3c4")
	generated := drbg.Generate()
	if bytes.Compare(expected, generated) != 0 {
		t.Fatalf("expected: %s, generated: %s", hex.EncodeToString(expected), hex.EncodeToString(generated))
	}
}
