package exploit_mt19937

import (
	"github.com/krkhan/crypto-impl-exploit/ch03/mt19937/impl_mt19937"
)

func untemper(y4 uint32) uint32 {
	y3 := y4 ^ (y4 >> impl_mt19937.L)

	y2 := y3 ^ (y3<<impl_mt19937.T)&impl_mt19937.C

	y2_0 := y2 << impl_mt19937.S
	y2_1 := y2 ^ (y2_0 & impl_mt19937.B)
	y2_2 := y2_1 << impl_mt19937.S
	y2_3 := y2 ^ (y2_2 & impl_mt19937.B)
	y2_4 := y2_3 << impl_mt19937.S
	y2_5 := y2 ^ (y2_4 & impl_mt19937.B)
	y2_6 := y2_5 << impl_mt19937.S
	y2_7 := y2 ^ (y2_6 & impl_mt19937.B)
	y2_8 := y2_7 << impl_mt19937.S
	y1 := y2 ^ (y2_8 & impl_mt19937.B)

	y1_0 := y1 >> impl_mt19937.U
	y1_1 := y1 ^ y1_0
	y1_2 := y1_1 >> impl_mt19937.U
	y := y1 ^ y1_2

	return y
}

func CloneMT19937(mt *impl_mt19937.MT19937) *impl_mt19937.MT19937 {
	var recoveredState [impl_mt19937.N]uint32
	for i := uint32(0); i < impl_mt19937.N; i++ {
		recoveredState[i] = untemper(mt.Generate())
	}
	return impl_mt19937.NewMT19937WithState(recoveredState)
}
