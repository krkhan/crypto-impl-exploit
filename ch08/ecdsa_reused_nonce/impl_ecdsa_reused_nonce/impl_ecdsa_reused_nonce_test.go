package impl_ecdsa_reused_nonce

import (
	"crypto/ecdsa"
	"crypto/sha256"
	"testing"
	"time"
)

func TestEcdsaSignUsingFixedNonce(t *testing.T) {
	priv, err := NewEcdsaKeyPair()
	if err != nil {
		t.Fatalf("private key generation failed: %s", err)
	}

	messages := [][]byte{
		[]byte(""),
		[]byte("Hello World!"),
		[]byte("The quick brown fox jumps over the lazy dog"),
		[]byte(time.Now().String()),
	}

	for _, message := range messages {
		hash := sha256.Sum256(message)
		r, s, err := EcdsaSignUsingFixedNonce(priv, hash[:])
		if err != nil {
			t.Fatalf("signing failed: %s", err)
		}

		ok := ecdsa.Verify(&priv.privKey.PublicKey, hash[:], r, s)
		if !ok {
			t.Fatalf("bad signature, message: %s, r: %X, s: %X", message, r, s)
		}

		t.Logf("signature verified for message: %s", message)
		t.Logf("r: 0x%X", r)
		t.Logf("s: 0x%X", s)
	}
}
